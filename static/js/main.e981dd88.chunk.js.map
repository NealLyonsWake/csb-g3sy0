{"version":3,"sources":["img/Logo.png","components/RecommendedMov.jsx","components/RecommendedList.jsx","components/WatchCard.jsx","components/WatchList.jsx","components/ReviewCard.jsx","components/Reviews.jsx","components/TopScreen.jsx","App.js","index.js"],"names":["RecommendedMov","props","id","title","banner","watched","undefined","className","src","alt","onClick","alert","onAdd","onRemove","RecommendedList","useState","recommended","setRecommended","useEffect","handleSuggestCall","a","axios","get","res","data","forEach","feature","prevMovies","name","bannerUrl","prev","filter","index","map","mov","addMov","window","scrollTo","left","top","document","body","scrollHeight","behavior","WatchCard","review","posted","deleteSingleMov","type","checked","onChange","toggleWatched","e","edit","target","value","disabled","post","WatchList","watchCards","toWatch","removeWatched","removeAll","length","ReviewCard","Reviews","reviews","postedReviews","TopScreen","heading","setHeading","watchList","setWatchList","setPostedReviews","handleHeading","newId","newTitle","newBanner","newWatched","prevWatch","handleWatched","movId","watchedMovies","m","handleEdit","movReview","editedMovies","handlePost","movPosted","movTitle","movBanner","prevPost","onPost","postedMovies","Logo","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e981dd88.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.64fba721.png\";","import React from \"react\";\r\nimport \"./RecommendedMovStyle.css\";\r\n\r\nfunction RecommendedMov(props) {\r\n  // Initialize the props variables.\r\n  const id = props.id;\r\n  const title = props.title;\r\n  const banner = props.banner;\r\n  const watched = props.watched;\r\n\r\n  // Invoked when the user clicks on one of the \"add to watch list\" buttons.\r\n  // Invokes the parent onAdd and onRemove functions to add the movie to the watch list and unmount the movie from the recommended list.\r\n  function handleClickAddMov() {\r\n    alert(`Wow, you added the movie ${title} to your watch list!`);\r\n    props.onAdd(id, title, banner, watched);\r\n    props.onRemove(id);\r\n  }\r\n\r\n  if (props.banner !== undefined) {\r\n    return (\r\n      <div className=\"movCard\">\r\n        <img src={banner} alt={`Banner for the movie, ${title}`} />\r\n        <button className=\"addButton\" onClick={handleClickAddMov}>\r\n          Add to Watch List\r\n        </button>\r\n        <h4 className=\"title\">{title}</h4>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default RecommendedMov;\r\n","/* eslint-disable */\r\nimport \"./RecommendedListStyle.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport RecommendedMov from \"./RecommendedMov\";\r\n\r\nfunction RecommendedList(props) {\r\n  // Declare base URL for handling the API\r\n  const BASE_URL = \"https://hub.dummyapis.com/vj/wzGUkpZ#\";\r\n  // Declare state of recommended movie list\r\n  const [recommended, setRecommended] = useState([{}]);\r\n\r\n  // Call the API call function with the page mounts.\r\n  // Limit to one call by using an empty array.\r\n  useEffect(() => {\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n  }, []);\r\n\r\n  // Call when the user clicks on the \"spin for more\" button\r\n  function handleRecoRequest() {\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n    handleSuggestCall();\r\n    // The below is cited from https://stackoverflow.com/questions/11715646/scroll-automatically-to-the-bottom-of-the-page\r\n    // Smooth scroll to the bottom of the page.\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: document.body.scrollHeight,\r\n      behavior: \"smooth\"\r\n    });\r\n  }\r\n\r\n  // The actual call to the API, called when either useEffect or handleRecoRequest is invoked.\r\n  // API handled inside an async function with try or catch to handle the response or any response error.\r\n  const handleSuggestCall = async () => {\r\n    try {\r\n      const res = await axios.get(BASE_URL);\r\n      const [...movieData] = res.data;\r\n\r\n      movieData.forEach((feature) => {\r\n        setRecommended((prevMovies) => {\r\n          return [\r\n            ...prevMovies,\r\n            {\r\n              id: feature.id,\r\n              name: feature.name,\r\n              banner: feature.bannerUrl,\r\n              watched: feature.watched\r\n            }\r\n          ];\r\n        });\r\n      });\r\n    } catch (e) {\r\n      // Action if rejected if above fails\r\n      return alert(\r\n        \"Error returning data from the server, check your internet connection\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Called from the child RecommendedMov component using props.\r\n  // This will be invoked when a user adds a movie to their watch list and this will remove the movie from the recommended list.\r\n  function onRemove(id) {\r\n    setRecommended((prev) => {\r\n      return prev.filter((index) => {\r\n        return index.id !== id;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      <div className=\"recoList\">\r\n        {recommended.map((mov, index) => {\r\n          return (\r\n            <RecommendedMov\r\n              key={index}\r\n              id={mov.id}\r\n              title={mov.name}\r\n              banner={mov.banner}\r\n              watched={mov.watched}\r\n              onAdd={props.addMov}\r\n              onRemove={onRemove}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <button className=\"APICall\" onClick={handleRecoRequest}>\r\n        Spin For More\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecommendedList;\r\n","import React from \"react\";\r\nimport \"./WatchCardStyle.css\";\r\n\r\nfunction WatchCard(props) {\r\n  // Initalize variables from props\r\n  const id = props.id;\r\n  const title = props.title;\r\n  const banner = props.banner;\r\n  const watched = props.watched;\r\n  const review = props.review;\r\n  const posted = props.posted;\r\n\r\n  // Setup handle toggle function for watched movie if the movie has an entry.\r\n  // Check or uncheck the watched checkbox depending on if watched is true or false.\r\n  if (props.banner !== undefined) {\r\n    const handleToggle = () => {\r\n      props.toggleWatched(id, watched);\r\n    };\r\n\r\n    // Delete a single movie when user clicks on the \"delete\" button.\r\n    // Parent function invoked inside this function through props.\r\n    function deleteSingleMov() {\r\n      props.deleteSingleMov(id);\r\n    }\r\n\r\n    // Invoked whenever the user types anything in the textarea element.\r\n    // Invokes the parent function to update the state of the review value.\r\n    function onEdit(e) {\r\n      props.edit(id, e.target.value);\r\n    }\r\n\r\n    // Invoked when the user clicks on the \"post\" / \"edit\" button.\r\n    // Invokes the parent function to update the state of review posts.\r\n    function onPost() {\r\n      props.post(id, review, posted, title, banner);\r\n    }\r\n\r\n    // Checks if the textarea should be enabled or disabled on loadup.\r\n    // If a review has been posted for a particular movie the textarea would be disabled on load up.\r\n    const handlePosted = () => {\r\n      return posted;\r\n    };\r\n\r\n    // Checks if a movie review has already been reviewed and sets the button text to edit if so.\r\n    const postedCheck = () => {\r\n      if (posted) {\r\n        return \"Edit\";\r\n      } else {\r\n        return \"Post\";\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"watchCard\">\r\n        <div className=\"head\">\r\n          <h2>{title}</h2>\r\n        </div>\r\n        <div className=\"banner\">\r\n          <img src={banner} alt={`Banner for the movie, ${title}`} />\r\n        </div>\r\n\r\n        <div className=\"buttons\">\r\n          <button className=\"watchButtons\">Play</button>\r\n          <button className=\"watchButtons\" onClick={deleteSingleMov}>\r\n            Delete\r\n          </button>\r\n          <label>\r\n            <input type=\"checkbox\" checked={watched} onChange={handleToggle} />\r\n            Watched\r\n          </label>\r\n        </div>\r\n        <div className=\"review\">\r\n          <label>\r\n            Your Movie Review\r\n            <textarea\r\n              onChange={onEdit}\r\n              value={review}\r\n              disabled={handlePosted()}\r\n            ></textarea>\r\n            <button className=\"editButton\" onClick={onPost}>\r\n              {postedCheck()}\r\n            </button>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default WatchCard;\r\n","import \"./WatchListStyle.css\";\r\nimport React from \"react\";\r\nimport WatchCard from \"./WatchCard\";\r\n\r\nfunction WatchList(props) {\r\n  // Initialize the watchlist prop variable\r\n  const watchCards = props.toWatch;\r\n\r\n  // Called when the user clicks on \"remove watched\" button.\r\n  // Invokes the parent function to filter out any returned true watched values.\r\n  function removeWatched() {\r\n    props.removeWatched();\r\n  }\r\n\r\n  // Called when the user clicks on \"remove all\" button.\r\n  // Invokes the parent function to reset the state of watchlist back to default.\r\n  function removeAll() {\r\n    props.removeAll();\r\n  }\r\n\r\n  function checkList() {\r\n    if (watchCards.length < 1 && watchCards.banner === undefined) {\r\n      return (\r\n        <div>\r\n          <h1 className=\"empty\">Oh no, it's Empty!</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button className=\"removeButton\" onClick={removeAll}>\r\n            Remove All\r\n          </button>\r\n          <button className=\"removeButton\" onClick={removeWatched}>\r\n            Remove Watched\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"watchListContainer\">\r\n      {checkList()}\r\n      <div className=\"cardContainer\">\r\n        {watchCards.map((mov, index) => {\r\n          return (\r\n            <WatchCard\r\n              key={index}\r\n              id={mov.id}\r\n              title={mov.name}\r\n              banner={mov.banner}\r\n              watched={mov.watched}\r\n              review={mov.review}\r\n              posted={mov.posted}\r\n              edit={props.edit}\r\n              post={props.post}\r\n              toggleWatched={props.toggleWatched}\r\n              deleteSingleMov={props.deleteSingleMov}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WatchList;\r\n","import React from \"react\";\r\n\r\nfunction ReviewCard(props) {\r\n  const title = props.title;\r\n  const banner = props.banner;\r\n  const review = props.review;\r\n\r\n  return (\r\n    <div className=\"reviewCard\">\r\n      <div className=\"reviewHeading\">\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <div className=\"reviewBanner\">\r\n        <img src={banner} alt={`Banner for the movie, ${title}`} />\r\n      </div>\r\n      <div className=\"reviewPost\">\r\n        <p>\r\n          <i>{`\"${review}\"`}</i>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewCard;\r\n","import \"./Reviews.css\";\r\nimport React from \"react\";\r\nimport ReviewsCard from \"./ReviewCard\";\r\n\r\nfunction Reviews(props) {\r\n  const reviews = props.postedReviews;\r\n\r\n  if (reviews.length < 1) {\r\n    return (\r\n      <div className=\"emptyReview\">\r\n        <h1 className=\"emptyTitle\">Oops, there's no review!</h1>\r\n        <p>Add a movie to your watch list and post a review</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return reviews.map((post, index) => {\r\n      return (\r\n        <div className=\"reviewsContainer\">\r\n          <ReviewsCard\r\n            key={index}\r\n            title={post.name}\r\n            banner={post.banner}\r\n            review={post.review}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import Logo from \"../img/Logo.png\";\r\nimport \"./TopScreenStyle.css\";\r\nimport React, { useState } from \"react\";\r\nimport RecommendedList from \"./RecommendedList\";\r\nimport WatchList from \"./WatchList\";\r\nimport Reviews from \"./Reviews\";\r\n\r\nfunction TopScreen() {\r\n  // Declare states\r\n  const [heading, setHeading] = useState(\"Recommended for You\");\r\n  const [watchList, setWatchList] = useState([]);\r\n  const [postedReviews, setPostedReviews] = useState([]);\r\n\r\n  // Set the appropriate heading when the user clicks a navigation button\r\n  function handleHeading(e) {\r\n    setHeading(e.target.value);\r\n  }\r\n\r\n  // Call the appropriate component when the heading is called\r\n  function returnComponent() {\r\n    if (heading === \"Recommended for You\") {\r\n      return <RecommendedList addMov={onAdd} />;\r\n    } else if (heading === \"Watch List\") {\r\n      // Call the watch list\r\n      return (\r\n        <WatchList\r\n          toWatch={watchList}\r\n          toggleWatched={handleWatched}\r\n          removeWatched={removeWatched}\r\n          edit={handleEdit}\r\n          post={handlePost}\r\n          deleteSingleMov={deleteSingleMov}\r\n          removeAll={removeAll}\r\n        />\r\n      );\r\n    } else {\r\n      // Call the review list to be populated\r\n      return <Reviews postedReviews={postedReviews} />;\r\n    }\r\n  }\r\n\r\n  // Add a movie to the watch list\r\n  function onAdd(newId, newTitle, newBanner, newWatched) {\r\n    setWatchList((prevWatch) => {\r\n      return [\r\n        ...prevWatch,\r\n        {\r\n          id: newId,\r\n          name: newTitle,\r\n          banner: newBanner,\r\n          watched: newWatched,\r\n          review: \"\",\r\n          posted: false\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  // Managing watch list movies (toggle watched)\r\n  const handleWatched = (movId, watched) => {\r\n    const watchedMovies = watchList.map((m) => {\r\n      if (m.id === movId) {\r\n        m.watched = !watched;\r\n      }\r\n      return m;\r\n    });\r\n\r\n    setWatchList(watchedMovies);\r\n  };\r\n\r\n  // Managing watch list movies (delete all watched movies)\r\n  const removeWatched = () => {\r\n    if (watchList.length === 0) {\r\n      window.alert(\"No tasks to remove\");\r\n      return;\r\n    }\r\n\r\n    setWatchList(watchList.filter((m) => m.watched === false));\r\n  };\r\n\r\n  // Managing watch list movies (delete a single movie)\r\n  function deleteSingleMov(id) {\r\n    setWatchList((prev) => {\r\n      return prev.filter((index) => {\r\n        return index.id !== id;\r\n      });\r\n    });\r\n  }\r\n\r\n  // Managing watch list movies (delete all movies)\r\n  function removeAll() {\r\n    setWatchList([]);\r\n  }\r\n\r\n  // Update the state of the review comment box in the watch list while the user is typing\r\n  const handleEdit = (movId, movReview) => {\r\n    const editedMovies = watchList.map((m) => {\r\n      if (m.id === movId) {\r\n        m.review = movReview;\r\n      }\r\n      return m;\r\n    });\r\n\r\n    setWatchList(editedMovies);\r\n  };\r\n\r\n  // Update the state of the posted boolean to post the user's review or allow the user to edit their comments on their watch list.\r\n  const handlePost = (movId, movReview, movPosted, movTitle, movBanner) => {\r\n    if (movReview === \"\") {\r\n      return alert(\"Oops, there is no review to post! Write a review.\");\r\n    }\r\n    if (!movPosted) {\r\n      alert(\"Nice One! Your review was posted!\");\r\n      // Call the onPost function if there is actually a review to post\r\n      onPost(movId, movTitle, movBanner, movReview);\r\n    }\r\n    const postedMovies = watchList.map((m) => {\r\n      if (m.id === movId) {\r\n        m.posted = !movPosted;\r\n      }\r\n      return m;\r\n    });\r\n\r\n    setWatchList(postedMovies);\r\n  };\r\n\r\n  // Function to update the state of posted reviews to the reviews component\r\n  function onPost(movId, movTitle, movBanner, movReview) {\r\n    setPostedReviews((prevPost) => {\r\n      return [\r\n        ...prevPost,\r\n        {\r\n          id: movId,\r\n          name: movTitle,\r\n          banner: movBanner,\r\n          review: movReview\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div>\r\n          <img className=\"logo\" src={Logo} alt=\"Tasty TV logo\" />\r\n        </div>\r\n        <nav>\r\n          <button\r\n            className=\"navButton\"\r\n            onClick={handleHeading}\r\n            value=\"Recommended for You\"\r\n          >\r\n            Home\r\n          </button>\r\n          <button\r\n            className=\"navButton\"\r\n            onClick={handleHeading}\r\n            value=\"Watch List\"\r\n          >\r\n            Watch List\r\n          </button>\r\n          <button className=\"navButton\" onClick={handleHeading} value=\"Reviews\">\r\n            Reviews\r\n          </button>\r\n        </nav>\r\n        <h2>{heading}</h2>\r\n      </header>\r\n      {returnComponent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopScreen;\r\n","import \"./styles.css\";\nimport TopScreen from \"../src/components/TopScreen\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <TopScreen />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}